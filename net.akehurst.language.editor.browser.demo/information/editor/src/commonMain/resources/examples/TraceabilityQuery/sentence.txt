FOR TIMESPAN '01-Jan-2017' UNTIL '31-Dec-2017' EVERY month
 MATCH Milestone AS ms
   WHERE ms.dueDate <= now
   RETURN TABLE COLUMN Due CONTAINING COUNT(ms);
 JOIN
   MATCH Milestone AS ms
    ( LINKED * TIMES WITH Bug AS bug
      LINKED USING 1..* LINKS WITH TestResult AS bResult
    OR LINKED WITH Feature AS ft
      ( LINKED * TIMES WITH SubTask AS task
      OR LINKED WITH Requirement AS req
        ( LINKED USING 1..* LINKS WITH TestResult AS iResult
        AND
          LINKED TO CodeFile AS code
          LINKED USING 1..* LINKS WITH TestResult AS uResult
        ) ) )
    LINKED 1 TIMES TO Build AS build
    LINKED 1 TIMES TO Binary AS binary
   WHERE
     ms.released == true AND ft.status == 'done' AND task.status == 'done'
     AND iResult.value == 'pass' AND uResult.value == 'pass'
     AND build.testCoverage >= 80 AND bug.status == 'done'
     AND bResult.value == 'pass' AND build.buildDate < ms.dueDate
     AND build.version == ms.version AND binary.version == ms.version
     AND binary.publishedDate < ms.dueDate
   RETURN TABLE COLUMN Met CONTAINING COUNT(ms);
 JOIN
   RETURN TABLE COLUMN Percent CONTAINING (Met / Due)* 100;

typed-graph-model {

    node-type Milestone {}
    node-type Feature {}
    node-type Bug {}
    node-type SubTask {}
    node-type Requirement {}
    node-type IntegrationTest {}
    node-type CodeFile {}
    node-type UnitTest {}
    node-type TestResult {}
    node-type Build {}
    node-type Binary {}

    link-type MF: Milestone --- [*] Feature
    link-type MB: Milestone ---[*] Bug
    link-type FS: Feature ---[*] SubTask
    link-type FR: Feature [*]---[1..*] Requirement
    link-type RI: Requirement [1..*]---[*] IntegrationTest
    link-type RC: Requirement [*]---[*] CodeFile
    link-type CU: CodeFile ---[*] UnitTest
    link-type BU: Bug ---[*] UnitTest
    link-type UT: UnitTest --- TestResult
    link-type TB: TestResult [*]--- Build
    link-type BB: Build ---[?] Binary

}